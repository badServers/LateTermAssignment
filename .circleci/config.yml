# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/dist

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: npm install
      - run: npm run build
      - run: yarn add puppeteer
      
      - store_artifacts:
          path: /home/circleci/dist/dist/administrationManual.pdf
        
      - store_artifacts:
          path: /home/circleci/dist/dist/designReport.pdf
        
      - store_artifacts:
          path: /home/circleci/dist/dist/developmentManual.pdf
  
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # run tests!
      - run: yarn test
      
  deploy_to_staging:
    docker:
      # specify the version you desire here
      - image: circleci/node

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/dist

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run: npm install heroku
      - run: npm run deploy-staging

      - store_artifacts:
          path: /home/circleci/dist/dist/administrationManual.pdf

      - store_artifacts:
          path: /home/circleci/dist/dist/designReport.pdf

      - store_artifacts:
          path: /home/circleci/dist/dist/developmentManual.pdf

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
  
  run_puppyteer:
    docker:
      # specify the version you desire here
      - image: circleci/node

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/dist

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: npm run puppyteer

      - store_artifacts:
          path: /home/circleci/dist/dist/administrationManual.pdf

      - store_artifacts:
          path: /home/circleci/dist/dist/designReport.pdf

      - store_artifacts:
          path: /home/circleci/dist/dist/developmentManual.pdf

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }} 
  
  deploy_to_production:
    docker:
      # specify the version you desire here
      - image: circleci/node

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/dist

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run: npm install heroku
      - run: npm run deploy-production

      - store_artifacts:
          path: /home/circleci/dist/dist/administrationManual.pdf

      - store_artifacts:
          path: /home/circleci/dist/dist/designReport.pdf

      - store_artifacts:
          path: /home/circleci/dist/dist/developmentManual.pdf

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy_to_staging:
          requires:
            - build
          filters:
            branches:
              only: master
      - run_puppyteer:
          requires:
            - -deploy_to_staging
          filters:
            branches:
              only: master
      - deploy_to_production:
          requires:
            - run_puppyteer
          filters:
            branches:
              only: master      

